{"version":3,"sources":["images/bhxh-app-1.jpg","images/bhxh-app-2.jpg","images/bhxh-cover.jpg","images/bhxh-explain.jpg","constants.js","components/ModalInsuranceSalary.js","utils.js","components/ModalAdjustments.js","components/Result.js","App.js","reportWebVitals.js","index.js"],"names":["ModalInsuranceSalary","show","setShow","Modal","onHide","dialogClassName","aria-labelledby","Header","closeButton","Title","id","Body","href","bhxhCover","target","className","src","alt","bhxhNoteDetail","rel","app1","app2","million","months","Array","fill","map","_","i","padStart","years","currentYear","Date","getFullYear","oldestYear","year","push","zones","salaryTypes","Math","round","adjustments","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","calculateTotalYears","totalMonths","modulo","rawYears","ceil","getAdjustmentRate","Object","keys","length","formatNumber","number","withVnd","suffix","toLocaleString","calculatePeriods","periods","totalMonthsBefore2014","totalMonthsFrom2014","adjustedSalary","estimatedContributed","adjustedAverageSalaryFormula","forEach","period","monthStart","parseInt","yearStart","monthEnd","yearEnd","salary","split","join","insuranceSalary","salaryType","contractedSalaryToInsuranceSalary","adjustment","totalMonthsOfPeriod","adjustedAverageSalary","totalYearsBefore2014","totalYearsFrom2014","amountWillReceive","validatePeriod","errorMessage","calculateAmountPaid","byCompany","byWorker","total","ModalAdjustments","index","Result","result","React","useState","showModalAdjustments","setShowModalAdjustments","console","log","utils","onClick","disabled","defaultPeriod","App","setPeriods","setResult","showModalSalary","setShowModalSalary","updatePeriod","periodIndex","data","updatedPeriods","onChange","e","value","label","type","placeholder","aria-describedby","salaryInInteger","replace","formattedSalary","amountPaidForInsurance","handleSalaryChange","style","width","title","filter","idx","removePeriod","isValidTimeRange","hasError","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d51ed85a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bhxh-app-1.c1b48415.jpg\";","export default __webpack_public_path__ + \"static/media/bhxh-app-2.25fc720e.jpg\";","export default __webpack_public_path__ + \"static/media/bhxh-cover.24dc26a2.jpg\";","export default __webpack_public_path__ + \"static/media/bhxh-explain.cffbd6a9.jpg\";","const million = 1000000;\n\nexport const adjustmentsByYear = {\n  1995: 4.72,\n};\n\nexport const months = Array(12).fill('').map((_, i) => 'Tháng ' + `${i + 1}`.padStart(2, '0'));\n\nexport const years = [];\nconst currentYear = new Date().getFullYear();\nconst oldestYear = currentYear - 30;\nfor (let year = currentYear; year > oldestYear; year--) {\n  years.push(year);\n}\n\nexport const zones = {zone1: 'I', zone2: 'II', zone3: 'III', zone4: 'IV'};\nexport const zoneLabels = {\n  [zones.zone1]: 'I',\n  [zones.zone2]: 'II',\n  [zones.zone3]: 'III',\n  [zones.zone4]: 'IV',\n};\nexport const baseSalary = 1.49 * million;\nexport const maximumInsurancePerMonth = baseSalary * 20;\nexport const minimumSalaryByZone = {\n  [zones.zone1]: Math.round(4.18 * million),\n  [zones.zone2]: Math.round(3.71 * million),\n  [zones.zone3]: Math.round(3.25 * million),\n  [zones.zone4]: Math.round(2.92 * million),\n};\nexport const salaryTypes = {contracted: 'contracted', insurance: 'insurance'};\n\nexport const percentageCompanyPays = 17.5;\nexport const percentageWorkerPays = 8;\n\nexport const adjustments = {\n  1994: 4.85,\n  1995: 4.12,\n  1996: 4.89,\n  1997: 3.77,\n  1998: 3.5,\n  1999: 3.35,\n  2000: 3.41,\n  2001: 3.42,\n  2002: 3.29,\n  2003: 3.19,\n  2004: 2.96,\n  2005: 2.73,\n  2006: 2.54,\n  2007: 2.35,\n  2008: 1.91,\n  2009: 1.79,\n  2010: 1.64,\n  2011: 1.38,\n  2012: 1.26,\n  2013: 1.18,\n  2014: 1.14,\n  2015: 1.13,\n  2016: 1.1,\n  2017: 1.06,\n  2018: 1.03,\n  2019: 1,\n  2020: 1,\n};\n","import React from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport app1 from '../images/bhxh-app-1.jpg';\nimport app2 from '../images/bhxh-app-2.jpg';\nimport bhxhCover from '../images/bhxh-cover.jpg';\nimport bhxhNoteDetail from '../images/bhxh-explain.jpg';\n\nfunction ModalInsuranceSalary({ show, setShow }) {\n  return (\n    <Modal\n      show={show}\n      onHide={() => setShow(false)}\n      dialogClassName=\"modal-90w\"\n      aria-labelledby=\"salary-help\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"salary-help\">\n          Kiểm tra mức lương đóng BHXH\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>1. Xem trong số BHXH</h4>\n        <a href={bhxhCover} target=\"_blank\">\n          <img className=\"img-fluid\" src={bhxhCover} alt=\"bìa sổ BHXH\"/>\n        </a>\n        <a href={bhxhNoteDetail} target=\"_blank\">\n          <img className=\"img-fluid\" src={bhxhNoteDetail} alt=\"chi tiết BHXH\"/>\n        </a>\n\n        <hr/>\n\n        <h4>2. Xem trong ứng dụng điện thoại BHXH</h4>\n        <p>Bạn cũng có thể tải App VssID để kiểm tra mức lương đóng BHXH</p>\n        <ul>\n          <li>\n            <a href=\"https://play.google.com/store/apps/details?id=com.bhxhapp\" target=\"_blank\" rel=\"noreferrer\">\n              Link tải cho Android\n            </a>\n          </li>\n          <li>\n            <a href=\"https://apps.apple.com/vn/app/vssid/id1521647264?l=vi\" target=\"_blank\" rel=\"noreferrer\">\n              Link tải cho iPhone\n            </a>\n          </li>\n          <li>\n            <a href=\"https://luatvietnam.vn/bao-hiem/cach-su-dung-vssid-563-27843-article.html\" target=\"_blank\" rel=\"noreferrer\">\n              Hướng dẫn đăng kí & sử dụng app\n            </a>\n          </li>\n        </ul>\n\n        <p>Sau khi tải app, đăng kí & đăng nhập bạn có thể xem thông tin của mình.</p>\n        <a href={app1} target=\"_blank\">\n          <img className=\"img-fluid\" src={app1} alt=\"Xem thông tin BHXH trên ứng dụng di động 1\"/>\n        </a>\n        <a href={app2} target=\"_blank\">\n          <img className=\"img-fluid\" src={app2} alt=\"Xem thông tin BHXH trên ứng dụng di động 1\"/>\n        </a>\n\n        <hr/>\n\n        <p>Nếu bạn không xem được = cả 2 cách trên, hãy thử hỏi bộ phận kế toán / nhân sự của công ty bạn!</p>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default ModalInsuranceSalary;\n","import {adjustments, percentageCompanyPays, percentageWorkerPays, salaryTypes} from \"./constants\";\n\nfunction calculatePeriods(periods) {\n  let totalMonthsBefore2014 = 0;\n  let totalMonthsFrom2014 = 0;\n  let adjustedSalary = 0;\n  let estimatedContributed = 0;\n  let adjustedAverageSalaryFormula = '{';\n\n  periods.forEach(period => {\n    const monthStart = parseInt(period.monthStart);\n    const yearStart = parseInt(period.yearStart);\n    const monthEnd = parseInt(period.monthEnd);\n    const yearEnd = parseInt(period.yearEnd);\n    const salary = parseInt(period.salary.split(' ').join(''));\n    const salaryType = period.salaryType;\n    const insuranceSalary = salaryType === salaryTypes.contracted\n      ? contractedSalaryToInsuranceSalary(salary)\n      : salary;\n\n    for (let year = yearStart; year <= yearEnd; year++) {\n      const adjustment = getAdjustmentRate(year);\n      let totalMonthsOfPeriod = 0;\n\n      if (yearStart === yearEnd) {\n        totalMonthsOfPeriod = monthEnd - monthStart + 1;\n      } else if (year === yearStart) {\n        totalMonthsOfPeriod = 12 - monthStart + 1;\n      } else if (year === yearEnd) {\n        totalMonthsOfPeriod = monthEnd;\n      } else {\n        totalMonthsOfPeriod = 12;\n      }\n\n      adjustedAverageSalaryFormula += `(${totalMonthsOfPeriod} * ${formatNumber(insuranceSalary)} * ${adjustment})`\n      adjustedSalary += (totalMonthsOfPeriod * insuranceSalary * adjustment);\n      estimatedContributed += (totalMonthsOfPeriod * insuranceSalary) * 20 / 100;\n\n      if (year < 2014) {\n        totalMonthsBefore2014 += totalMonthsOfPeriod;\n      } else {\n        totalMonthsFrom2014 += totalMonthsOfPeriod;\n      }\n    }\n  });\n\n  const totalMonths = totalMonthsBefore2014 + totalMonthsFrom2014;\n\n  const adjustedAverageSalary = adjustedSalary / totalMonths;\n  const totalYearsBefore2014 = calculateTotalYears(totalMonthsBefore2014);\n  const totalYearsFrom2014 = calculateTotalYears(totalMonthsFrom2014);\n\n  adjustedAverageSalaryFormula = adjustedAverageSalaryFormula.split(')(').join(') + (');\n  adjustedAverageSalaryFormula += `} : ${totalMonths}`;\n\n  return {\n    totalYearsBefore2014,\n    totalYearsFrom2014,\n    adjustedAverageSalaryFormula,\n    estimatedContributed,\n    adjustedSalary,\n    adjustedAverageSalary,\n    totalMonths,\n    amountWillReceive: (1.5 * adjustedAverageSalary * totalYearsBefore2014) + (2 * adjustedAverageSalary * totalYearsFrom2014)\n  };\n}\n\nfunction calculateTotalYears(totalMonths) {\n  const modulo = totalMonths % 12;\n  const rawYears = totalMonths / 12;\n  if (modulo === 0) {\n    return rawYears;\n  } else if (modulo <= 6) {\n    return Math.round(rawYears) + 0.5\n  } else {\n    return Math.ceil(rawYears);\n  }\n}\n\nfunction validatePeriod(period) {\n  const {salary, monthStart, monthEnd, yearStart, yearEnd} = period;\n  let errorMessage = '';\n\n  if (!salary || !monthStart || !monthEnd || !yearStart || !yearEnd) {\n    errorMessage = 'Vui lòng điền hết thông tin!';\n  }\n\n  return errorMessage;\n}\n\nfunction getAdjustmentRate(year) {\n  const years = Object.keys(adjustments);\n  if (year < years[0]) {\n    return adjustments[years[0]];\n  }\n\n  if (year > years[years.length - 1]) {\n    return adjustments[years[years.length - 1]];\n  }\n\n  return adjustments[year];\n}\n\nfunction contractedSalaryToInsuranceSalary(contractedSalary) {\n\n}\n\nfunction calculateAmountPaid(insuranceSalary) {\n  const byCompany = insuranceSalary * percentageCompanyPays / 100;\n  const byWorker = insuranceSalary * percentageWorkerPays / 100;\n\n  return {\n    byCompany,\n    byWorker,\n    total: byCompany + byWorker,\n  };\n}\n\nfunction formatNumber(number, withVnd = false) {\n  const suffix = withVnd ? ' vnđ' : '';\n  return Math.round(number).toLocaleString('en') + suffix;\n}\n\nexport default {\n  calculatePeriods,\n  validatePeriod,\n  calculateAmountPaid,\n  formatNumber,\n};\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {adjustments} from '../constants';\n\nfunction ModalAdjustments({ show, setShow}) {\n  return (\n    <Modal\n      show={show}\n      onHide={() => setShow(false)}\n      dialogClassName=\"modal-90w\"\n      aria-labelledby=\"salary-adjustment\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"salary-adjustment\">\n          Mức điều chỉnh lương\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>\n          Theo\n          {' '}\n          <a target=\"_blank\" href=\"https://luatvietnam.vn/lao-dong/thong-tu-35-2019-tt-bldtbxh-muc-dieu-chinh-tien-luong-thu-nhap-thang-da-dong-bao-hiem-xa-hoi-180368-d1.html\">\n            Điều 2 Thông tư 35/2019/TT-BLĐTBXH\n          </a>,\n          mức điều chỉnh tiền lương tháng đóng BHXH của người lao động như sau:\n        </p>\n        <table className=\"table table-bordered table-striped\">\n          <thead>\n          <tr>\n            <th>Năm</th>\n            <th>Mức điều chỉnh</th>\n          </tr>\n          </thead>\n          <tbody>\n          {Object.keys(adjustments).map((year, index) => {\n            return (\n              <tr key={year}>\n                <td>{index === 0 && '<= '}{year}</td>\n                <td>{adjustments[year]}</td>\n              </tr>\n            )\n          })}\n          </tbody>\n        </table>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default ModalAdjustments;\n","import React from 'react';\nimport utils from '../utils';\nimport ModalAdjustments from './ModalAdjustments';\n\nfunction Result({ result }) {\n  const [showModalAdjustments, setShowModalAdjustments] = React.useState(false);\n  console.log(result);\n\n  return (\n    <div>\n      <h2>Kết quả</h2>\n      <p>Số tháng tham gia BHXH: {result.totalMonths}</p>\n      <p>Mức lương đóng BHXH bình quân: {utils.formatNumber(result.adjustedAverageSalary, true)} / tháng</p>\n      <p>Số tiền <i>ước tính</i> đã đóng BHXH: {utils.formatNumber(result.estimatedContributed, true)}</p>\n      <p className=\"text-success\">\n        <b>\n          Số tiền <i>ước tính</i> sẽ nhận: <u>{utils.formatNumber(result.amountWillReceive, true)}</u>\n        </b>\n      </p>\n      <p className=\"text-secondary\">\n        <small>* Kết quả có thể chênh lệch nhỏ so với thực tế vì nhiều lý do!</small>\n      </p>\n\n      <div className=\"mt-5\">\n        <h4>Công thức</h4>\n        <table className=\"table table-borderless table-responsive\">\n          <tbody>\n          <tr>\n            <td><b>Mbqtl</b></td>\n            <td>=</td>\n            <td>\n              (\n              <span className=\"badge rounded-pill bg-warning text-dark\">Số tháng đóng BHXH</span>\n              {' x '}\n              <span className=\"badge rounded-pill bg-warning text-dark\">Tiền lương tháng đóng BHXH</span>\n              {' x '}\n              <span className=\"badge rounded-pill bg-warning text-dark\">Mức điều chỉnh hàng năm</span>\n              )\n              {' : '}\n              <span className=\"badge rounded-pill bg-warning text-dark\">Tổng số tháng đóng BHXH</span>\n            </td>\n          </tr>\n          <tr>\n            <td><b>Mức hưởng</b></td>\n            <td>=</td>\n            <td>\n              (\n              <span className=\"badge rounded-pill bg-warning text-dark\">1.5</span>\n              {' x '}\n              <span className=\"badge rounded-pill bg-warning text-dark\">Mbqtl</span>\n              {' x '}\n              <span className=\"badge rounded-pill bg-warning text-dark\">Số năm đóng BHXH trước 2014</span>\n              )\n              {' + '}\n              (\n              <span className=\"badge rounded-pill bg-warning text-dark\">2</span>\n              {' x '}\n              <span className=\"badge rounded-pill bg-warning text-dark\">Mbqtl</span>\n              {' x '}\n              <span className=\"badge rounded-pill bg-warning text-dark\">Số năm đóng BHXH sau 2014</span>\n              )\n            </td>\n          </tr>\n          </tbody>\n        </table>\n        Trong đó\n        <ul>\n          <li>Mbqtl là mức bình quân tiền lương tháng đóng BHXH.</li>\n          <li>Thời gian đóng BHXH có tháng lẻ thì từ 01 - 06 tháng được tính là ½ năm, từ 07 - 11 tháng được tính là 01 năm.</li>\n          <li>Trường hợp tính đến trước 01/01/2014 nếu thời gian đóng BHXH có tháng lẻ thì những tháng lẻ đó được chuyển sang giai đoạn đóng BHXH từ 01/01/2014 trở đi.</li>\n          <li>\n            <button\n              className=\"btn btn-sm btn-link\"\n              onClick={() => setShowModalAdjustments(!showModalAdjustments)}\n              disabled={showModalAdjustments}\n            >\n              Xem bảng mức điều chỉnh hằng năm\n            </button>\n          </li>\n        </ul>\n\n\n        <p className=\"mt-4\">Dựa theo công thức:</p>\n        <table className=\"table table-borderless table-responsive\">\n          <tbody>\n          <tr>\n            <td><b>Mbqtl</b></td>\n            <td>=</td>\n            <td>{result.adjustedAverageSalaryFormula}</td>\n            <td>=</td>\n            <td>{utils.formatNumber(result.adjustedAverageSalary)}</td>\n          </tr>\n          <tr>\n            <td><b>Mức hưởng</b></td>\n            <td>=</td>\n            <td>\n              {`(${1.5} * ${utils.formatNumber(result.adjustedAverageSalary)} * ${result.totalYearsBefore2014})`}\n              {' + '}\n              {`(${2} * ${utils.formatNumber(result.adjustedAverageSalary)} * ${result.totalYearsFrom2014})`}\n            </td>\n            <td>=</td>\n            <td>{utils.formatNumber(result.amountWillReceive)}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n      <ModalAdjustments show={showModalAdjustments} setShow={setShowModalAdjustments} />\n    </div>\n  )\n}\n\nexport default Result;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ModalInsuranceSalary from './components/ModalInsuranceSalary';\nimport Result from './components/Result';\nimport {\n  months,\n  years\n} from \"./constants\";\nimport utils from \"./utils\";\n\nconst defaultPeriod = {\n  salary: '',\n};\n\nfunction App() {\n  const [periods, setPeriods] = React.useState([{...defaultPeriod}]);\n  const [result, setResult] = React.useState(null);\n  const [showModalSalary, setShowModalSalary] = React.useState(false);\n\n  const addPeriod = () => {\n    setPeriods([...periods, {...defaultPeriod}]);\n    setResult(null);\n  };\n\n  const removePeriod = (index) => {\n    setPeriods([...periods.filter((period, idx) => idx !== index)]);\n    setResult(null);\n  };\n\n  const calculate = () => {\n    const updatedPeriods = [];\n    let hasError = false;\n\n    periods.forEach((period) => {\n      const errorMessage = utils.validatePeriod(period);\n\n      if (errorMessage) hasError = true;\n\n      updatedPeriods.push({\n        ...period,\n        errorMessage: errorMessage,\n      })\n    });\n\n    setPeriods(updatedPeriods);\n\n    if (!hasError) {\n      setResult(utils.calculatePeriods(periods));\n    }\n  };\n\n  const updatePeriod = (periodIndex, data) => {\n    const updatedPeriods = [...periods];\n    updatedPeriods[periodIndex] = {\n      ...periods[periodIndex],\n      ...data,\n      errorMessage: '',\n    };\n\n    setPeriods([\n      ...updatedPeriods,\n    ]);\n\n    setResult(null);\n  };\n\n  const handleSalaryChange = (periodIndex, salary) => {\n    if (salary.length === 0) {\n      updatePeriod(periodIndex, {salary: ''});\n      return;\n    }\n\n    const salaryInInteger = parseInt(salary.replace(/[^0-9]/g, '') || 0);\n    const localeString = salaryInInteger.toLocaleString('en');\n    const formattedSalary = localeString.replace(/,/g, ' ');\n\n    const amountPaidForInsurance = utils.calculateAmountPaid(salaryInInteger);\n\n    updatePeriod(periodIndex, {salary: formattedSalary, amountPaidForInsurance});\n  };\n\n  return (\n    <div className=\"App\">\n      <button className=\"btn btn-sm btn-link\" onClick={() => setShowModalSalary(true)} disabled={showModalSalary}>\n        Hướng dẫn kiểm tra mức lương đóng BHXH\n      </button>\n      <table className=\"table table-bordered table-responsive-md\">\n        <thead>\n        <tr>\n          <th>#</th>\n          <th>Từ... </th>\n          <th>Đến... </th>\n          <th>\n            Mức lương đóng BHXH\n          </th>\n          <th/>\n        </tr>\n        </thead>\n        <tbody>\n          {periods.map((period, index) => {\n            const {\n              salary,\n            } = period;\n\n            return (\n              <tr key={index}>\n                <td>{index + 1}</td>\n                <td>\n                  <select\n                    className=\"mr-3\"\n                    onChange={(e) => updatePeriod(index, {monthStart: e.target.value})}\n                  >\n                    <option>Tháng...</option>\n                    {months.map((label, index) => (<option value={index + 1} key={index}>{label}</option>))}\n                  </select>\n                  <select\n                    className=\"\"\n                    onChange={(e) => updatePeriod(index, {yearStart: e.target.value})}\n                  >\n                    <option>Năm...</option>\n                    {years.map((label) => (<option value={label} key={label}>{label}</option>))}\n                  </select>\n                </td>\n                <td>\n                  <select\n                    className=\"mr-3\"\n                    onChange={(e) => updatePeriod(index, {monthEnd: e.target.value})}\n                  >\n                    <option>Tháng...</option>\n                    {months.map((label, index) => (<option value={index + 1} key={index}>{label}</option>))}\n                  </select>\n                  <select\n                    onChange={(e) => updatePeriod(index, {yearEnd: e.target.value})}\n                  >\n                    <option>Năm...</option>\n                    {years.map((label) => (<option value={label} key={label}>{label}</option>))}\n                  </select>\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    placeholder=\"10 000 000\"\n                    aria-describedby=\"emailHelp\"\n                    value={salary}\n                    onChange={(e) => handleSalaryChange(index, e.target.value)}\n                    style={{width: '120px'}}\n                  />\n                  {' '}\n                  vnđ\n                </td>\n                <td>\n                  <button\n                    title=\"Xóa\"\n                    onClick={() => removePeriod(index)}\n                    className=\"btn btn-sm rounded btn-danger\"\n                  >\n                    xóa\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div className=\"mb-4\">\n        <button\n          onClick={addPeriod}\n          className=\"btn btn-sm btn-secondary mr-2\"\n        >\n          <b>+</b> thêm dòng\n        </button>\n      </div>\n      <ul>\n        {periods.map((period, index) => {\n          const monthStart = parseInt(period.monthStart);\n          const monthEnd = parseInt(period.monthEnd);\n          const yearStart = parseInt(period.yearStart);\n          const yearEnd = parseInt(period.yearEnd);\n          const {errorMessage} = period;\n\n          let isValidTimeRange = true;\n          if (monthStart && monthEnd && yearStart && yearEnd) {\n            if (yearEnd < yearStart || (yearEnd === yearStart && monthEnd < monthStart)) {\n              isValidTimeRange = false;\n            }\n          }\n\n          if (isValidTimeRange && !errorMessage) {\n            return null;\n          }\n\n          return (\n            <li key={index}>\n              Lỗi ở dòng {index + 1}:\n              {' '}\n              {!isValidTimeRange && (\n                <span className=\"text-danger\">Thời gian không phù hợp, vui lòng chọn lại!</span>\n              )}\n              {' '}\n              {errorMessage && (\n                <span className=\"text-danger\">{errorMessage}</span>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n\n      {!result && (\n        <div className=\"mt-5 mb-5\">\n          <button\n            className=\"btn btn-lg btn-primary\"\n            onClick={calculate}\n            disabled={periods.length === 0}\n          >\n            Xem kết quả\n          </button>\n        </div>\n      )}\n\n      {result && (\n        <div className=\"card mt-5\">\n          <div className=\"card-body\">\n            <Result\n              result={result}\n            />\n          </div>\n        </div>\n      )}\n      <ModalInsuranceSalary\n        show={showModalSalary}\n        setShow={setShowModalSalary}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}