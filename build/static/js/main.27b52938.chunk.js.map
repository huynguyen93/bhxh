{"version":3,"sources":["constants.js","components/ModalSalary.js","utils.js","components/ModalAdjustments.js","components/Result.js","App.js","reportWebVitals.js","index.js"],"names":["ModalSalary","show","setShow","Modal","onHide","dialogClassName","aria-labelledby","Header","closeButton","Title","id","Body","million","months","Array","fill","map","_","i","padStart","years","currentYear","Date","getFullYear","oldestYear","year","push","zones","salaryTypes","Math","round","adjustments","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","calculateTotalYears","totalMonths","modulo","rawYears","ceil","getAdjustmentRate","Object","keys","length","formatNumber","number","withVnd","suffix","toLocaleString","calculatePeriods","periods","totalMonthsBefore2014","totalMonthsFrom2014","adjustedSalary","estimatedContributed","adjustedAverageSalaryFormula","forEach","period","monthStart","parseInt","yearStart","monthEnd","yearEnd","salary","split","join","insuranceSalary","salaryType","contractedSalaryToInsuranceSalary","adjustment","totalMonthsOfPeriod","adjustedAverageSalary","totalYearsBefore2014","totalYearsFrom2014","amountWillReceive","validatePeriod","errorMessage","calculateAmountPaid","byCompany","byWorker","total","ModalAdjustments","href","className","index","Result","result","React","useState","showModalAdjustments","setShowModalAdjustments","console","log","utils","onClick","defaultPeriod","App","setPeriods","setResult","showModalSalary","setShowModalSalary","updatePeriod","periodIndex","data","updatedPeriods","disabled","onChange","e","target","value","label","type","placeholder","aria-describedby","salaryInInteger","replace","formattedSalary","amountPaidForInsurance","handleSalaryChange","style","width","title","filter","idx","removePeriod","isValidTimeRange","hasError","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27b52938.chunk.js","sourcesContent":["const million = 1000000;\n\nexport const adjustmentsByYear = {\n  1995: 4.72,\n};\n\nexport const months = Array(12).fill('').map((_, i) => 'ThÃ¡ng ' + `${i + 1}`.padStart(2, '0'));\n\nexport const years = [];\nconst currentYear = new Date().getFullYear();\nconst oldestYear = currentYear - 30;\nfor (let year = currentYear; year > oldestYear; year--) {\n  years.push(year);\n}\n\nexport const zones = {zone1: 'I', zone2: 'II', zone3: 'III', zone4: 'IV'};\nexport const zoneLabels = {\n  [zones.zone1]: 'I',\n  [zones.zone2]: 'II',\n  [zones.zone3]: 'III',\n  [zones.zone4]: 'IV',\n};\nexport const baseSalary = 1.49 * million;\nexport const maximumInsurancePerMonth = baseSalary * 20;\nexport const minimumSalaryByZone = {\n  [zones.zone1]: Math.round(4.18 * million),\n  [zones.zone2]: Math.round(3.71 * million),\n  [zones.zone3]: Math.round(3.25 * million),\n  [zones.zone4]: Math.round(2.92 * million),\n};\nexport const salaryTypes = {contracted: 'contracted', insurance: 'insurance'};\n\nexport const percentageCompanyPays = 17.5;\nexport const percentageWorkerPays = 8;\n\nexport const adjustments = {\n  1994: 4.85,\n  1995: 4.12,\n  1996: 4.89,\n  1997: 3.77,\n  1998: 3.5,\n  1999: 3.35,\n  2000: 3.41,\n  2001: 3.42,\n  2002: 3.29,\n  2003: 3.19,\n  2004: 2.96,\n  2005: 2.73,\n  2006: 2.54,\n  2007: 2.35,\n  2008: 1.91,\n  2009: 1.79,\n  2010: 1.64,\n  2011: 1.38,\n  2012: 1.26,\n  2013: 1.18,\n  2014: 1.14,\n  2015: 1.13,\n  2016: 1.1,\n  2017: 1.06,\n  2018: 1.03,\n  2019: 1,\n  2020: 1,\n};\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nfunction ModalSalary({ show, setShow}) {\n  return (\n    <Modal\n      show={show}\n      onHide={() => setShow(false)}\n      dialogClassName=\"modal-90w\"\n      aria-labelledby=\"salary-explanation\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"salary-explanation\">\n          Giáº£i thÃ­ch cÃ¡c má»©c lÆ°Æ¡ng\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>1. Má»©c lÆ°Æ¡ng ÄÃ³ng BHXH</h4>\n        <p>AB CD</p>\n        <h4>2. Má»©c lÆ°Æ¡ng chÃ­nh thá»©c</h4>\n        <p>Lorem ipsum</p>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default ModalSalary;\n","import {adjustments, percentageCompanyPays, percentageWorkerPays, salaryTypes} from \"./constants\";\n\nfunction calculatePeriods(periods) {\n  let totalMonthsBefore2014 = 0;\n  let totalMonthsFrom2014 = 0;\n  let adjustedSalary = 0;\n  let estimatedContributed = 0;\n  let adjustedAverageSalaryFormula = '{';\n\n  periods.forEach(period => {\n    const monthStart = parseInt(period.monthStart);\n    const yearStart = parseInt(period.yearStart);\n    const monthEnd = parseInt(period.monthEnd);\n    const yearEnd = parseInt(period.yearEnd);\n    const salary = parseInt(period.salary.split(' ').join(''));\n    const salaryType = period.salaryType;\n    const insuranceSalary = salaryType === salaryTypes.contracted\n      ? contractedSalaryToInsuranceSalary(salary)\n      : salary;\n\n    for (let year = yearStart; year <= yearEnd; year++) {\n      const adjustment = getAdjustmentRate(year);\n      let totalMonthsOfPeriod = 0;\n\n      if (yearStart === yearEnd) {\n        totalMonthsOfPeriod = monthEnd - monthStart + 1;\n      } else if (year === yearStart) {\n        totalMonthsOfPeriod = 12 - monthStart + 1;\n      } else if (year === yearEnd) {\n        totalMonthsOfPeriod = monthEnd;\n      } else {\n        totalMonthsOfPeriod = 12;\n      }\n\n      adjustedAverageSalaryFormula += `(${totalMonthsOfPeriod} * ${formatNumber(insuranceSalary)} * ${adjustment})`\n      adjustedSalary += (totalMonthsOfPeriod * insuranceSalary * adjustment);\n      estimatedContributed += (totalMonthsOfPeriod * insuranceSalary) * 20 / 100;\n\n      if (year < 2014) {\n        totalMonthsBefore2014 += totalMonthsOfPeriod;\n      } else {\n        totalMonthsFrom2014 += totalMonthsOfPeriod;\n      }\n    }\n  });\n\n  const totalMonths = totalMonthsBefore2014 + totalMonthsFrom2014;\n\n  const adjustedAverageSalary = adjustedSalary / totalMonths;\n  const totalYearsBefore2014 = calculateTotalYears(totalMonthsBefore2014);\n  const totalYearsFrom2014 = calculateTotalYears(totalMonthsFrom2014);\n\n  adjustedAverageSalaryFormula = adjustedAverageSalaryFormula.split(')(').join(') + (');\n  adjustedAverageSalaryFormula += `} : ${totalMonths}`;\n\n  return {\n    totalYearsBefore2014,\n    totalYearsFrom2014,\n    adjustedAverageSalaryFormula,\n    estimatedContributed,\n    adjustedSalary,\n    adjustedAverageSalary,\n    totalMonths,\n    amountWillReceive: (1.5 * adjustedAverageSalary * totalYearsBefore2014) + (2 * adjustedAverageSalary * totalYearsFrom2014)\n  };\n}\n\nfunction calculateTotalYears(totalMonths) {\n  const modulo = totalMonths % 12;\n  const rawYears = totalMonths / 12;\n  if (modulo === 0) {\n    return rawYears;\n  } else if (modulo <= 6) {\n    return Math.round(rawYears) + 0.5\n  } else {\n    return Math.ceil(rawYears);\n  }\n}\n\nfunction validatePeriod(period) {\n  const {salary, monthStart, monthEnd, yearStart, yearEnd} = period;\n  let errorMessage = '';\n\n  if (!salary || !monthStart || !monthEnd || !yearStart || !yearEnd) {\n    errorMessage = 'Vui lÃ²ng Äiá»n háº¿t thÃ´ng tin!';\n  }\n\n  return errorMessage;\n}\n\nfunction getAdjustmentRate(year) {\n  const years = Object.keys(adjustments);\n  if (year < years[0]) {\n    return adjustments[years[0]];\n  }\n\n  if (year > years[years.length - 1]) {\n    return adjustments[years[years.length - 1]];\n  }\n\n  return adjustments[year];\n}\n\nfunction contractedSalaryToInsuranceSalary(contractedSalary) {\n\n}\n\nfunction calculateAmountPaid(insuranceSalary) {\n  const byCompany = insuranceSalary * percentageCompanyPays / 100;\n  const byWorker = insuranceSalary * percentageWorkerPays / 100;\n\n  return {\n    byCompany,\n    byWorker,\n    total: byCompany + byWorker,\n  };\n}\n\nfunction formatNumber(number, withVnd = false) {\n  const suffix = withVnd ? ' vnÄ' : '';\n  return Math.round(number).toLocaleString('en') + suffix;\n}\n\nexport default {\n  calculatePeriods,\n  validatePeriod,\n  calculateAmountPaid,\n  formatNumber,\n};\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {adjustments} from '../constants';\n\nfunction ModalAdjustments({ show, setShow}) {\n  return (\n    <Modal\n      show={show}\n      onHide={() => setShow(false)}\n      dialogClassName=\"modal-90w\"\n      aria-labelledby=\"salary-adjustment\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"salary-adjustment\">\n          Má»©c Äiá»u chá»nh lÆ°Æ¡ng\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>\n          Theo\n          {' '}\n          <a href=\"https://luatvietnam.vn/lao-dong/thong-tu-35-2019-tt-bldtbxh-muc-dieu-chinh-tien-luong-thu-nhap-thang-da-dong-bao-hiem-xa-hoi-180368-d1.html\">\n          Äiá»u 2 ThÃ´ng tÆ° 35/2019/TT-BLÄTBXH\n          </a>,\n          má»©c Äiá»u chá»nh tiá»n lÆ°Æ¡ng thÃ¡ng ÄÃ³ng BHXH cá»§a ngÆ°á»i lao Äá»ng nhÆ° sau:\n        </p>\n        <table className=\"table table-bordered table-striped\">\n          <thead>\n          <tr>\n            <th>NÄm</th>\n            <th>Má»©c Äiá»u chá»nh</th>\n          </tr>\n          </thead>\n          <tbody>\n          {Object.keys(adjustments).map((year, index) => {\n            return (\n              <tr key={year}>\n                <td>{index === 0 && '<= '}{year}</td>\n                <td>{adjustments[year]}</td>\n              </tr>\n            )\n          })}\n          </tbody>\n        </table>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default ModalAdjustments;\n","import React from 'react';\nimport utils from '../utils';\nimport ModalAdjustments from './ModalAdjustments';\n\nfunction Result({ result }) {\n  const [showModalAdjustments, setShowModalAdjustments] = React.useState(false);\n  console.log(result);\n\n  return (\n    <div>\n      <h2>Káº¿t quáº£</h2>\n      <p>Sá» thÃ¡ng tham gia BHXH: {result.totalMonths}</p>\n      <p>Má»©c lÆ°Æ¡ng ÄÃ³ng BHXH bÃ¬nh quÃ¢n: {utils.formatNumber(result.adjustedAverageSalary, true)} / thÃ¡ng</p>\n      <p>Sá» tiá»n <i>Æ°á»c tÃ­nh</i> ÄÃ£ ÄÃ³ng BHXH: {utils.formatNumber(result.estimatedContributed, true)}</p>\n      <p className=\"text-success\">\n        <b>\n          Sá» tiá»n <i>Æ°á»c tÃ­nh</i> sáº½ nháº­n: <u>{utils.formatNumber(result.amountWillReceive, true)}</u>\n        </b>\n      </p>\n      <p>\n        <p className=\"text-secondary\">\n          <small>* Káº¿t quáº£ cÃ³ thá» chÃªnh lá»ch nhá» so vá»i thá»±c táº¿ vÃ¬ nhiá»u lÃ½ do!</small>\n        </p>\n      </p>\n\n      <div className=\"mt-5\">\n        <h4>CÃ´ng thá»©c</h4>\n        <table className=\"table table-borderless table-responsive\">\n          <tbody>\n          <tr>\n            <td><b>Mbqtl</b></td>\n            <td>=</td>\n            <td>\n              (Sá» thÃ¡ng ÄÃ³ng BHXH x Tiá»n lÆ°Æ¡ng thÃ¡ng ÄÃ³ng BHXH x Má»©c Äiá»u chá»nh hÃ ng nÄm)\n              {' : '}\n              Tá»ng sá» thÃ¡ng ÄÃ³ng BHXH\n            </td>\n          </tr>\n          <tr>\n            <td><b>Má»©c hÆ°á»ng</b></td>\n            <td>=</td>\n            <td>\n              (1,5 x Mbqtl x Thá»i gian ÄÃ³ng BHXH trÆ°á»c nÄm 2014)\n              {' + '}\n              (2 x Mbqtl x Thá»i gian ÄÃ³ng BHXH sau nÄm 2014)\n            </td>\n          </tr>\n          </tbody>\n        </table>\n        <p>\n          Trong ÄÃ³:\n          <ul>\n            <li>Mbqtl lÃ  má»©c bÃ¬nh quÃ¢n tiá»n lÆ°Æ¡ng thÃ¡ng ÄÃ³ng BHXH.</li>\n            <li>Thá»i gian ÄÃ³ng BHXH cÃ³ thÃ¡ng láº» thÃ¬ tá»« 01 - 06 thÃ¡ng ÄÆ°á»£c tÃ­nh lÃ  Â½ nÄm, tá»« 07 - 11 thÃ¡ng ÄÆ°á»£c tÃ­nh lÃ  01 nÄm.</li>\n            <li>TrÆ°á»ng há»£p tÃ­nh Äáº¿n trÆ°á»c 01/01/2014 náº¿u thá»i gian ÄÃ³ng BHXH cÃ³ thÃ¡ng láº» thÃ¬ nhá»¯ng thÃ¡ng láº» ÄÃ³ ÄÆ°á»£c chuyá»n sang giai Äoáº¡n ÄÃ³ng BHXH tá»« 01/01/2014 trá» Äi.</li>\n            <li>\n              <a href=\"#\" onClick={() => {setShowModalAdjustments(!showModalAdjustments)}}>\n                Xem báº£ng má»©c Äiá»u chá»nh háº±ng nÄm\n              </a>\n            </li>\n          </ul>\n        </p>\n\n\n\n        <p className=\"mt-4\">Dá»±a theo cÃ´ng thá»©c:</p>\n        <table className=\"table table-borderless table-responsive\">\n          <tbody>\n          <tr>\n            <td><b>Mbqtl</b></td>\n            <td>=</td>\n            <td>{result.adjustedAverageSalaryFormula}</td>\n            <td>=</td>\n            <td>{utils.formatNumber(result.adjustedAverageSalary)}</td>\n          </tr>\n          <tr>\n            <td><b>Má»©c hÆ°á»ng</b></td>\n            <td>=</td>\n            <td>\n              {result.totalYearsBefore2014 > 0 && (\n                `(${1.5} * ${utils.formatNumber(result.adjustedAverageSalary)} * ${result.totalYearsBefore2014})`\n              )}\n              {result.totalYearsBefore2014 > 0 && result.totalYearsFrom2014 > 0 && (\n                ' + '\n              )}\n              {result.totalYearsFrom2014 > 0 && (\n                `(${2} * ${utils.formatNumber(result.adjustedAverageSalary)} * ${result.totalYearsFrom2014})`\n              )}\n            </td>\n            <td>=</td>\n            <td>{utils.formatNumber(result.amountWillReceive)}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n      <ModalAdjustments show={showModalAdjustments} setShow={setShowModalAdjustments} />\n    </div>\n  )\n}\n\nexport default Result;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ModalSalary from \"./components/ModalSalary\";\nimport Result from './components/Result';\nimport {\n  months,\n  years\n} from \"./constants\";\nimport utils from \"./utils\";\n\nconst defaultPeriod = {\n  salary: '',\n};\n\nfunction App() {\n  const [periods, setPeriods] = React.useState([{...defaultPeriod}]);\n  const [result, setResult] = React.useState(null);\n  const [showModalSalary, setShowModalSalary] = React.useState(false);\n\n  const addPeriod = () => {\n    setPeriods([...periods, {...defaultPeriod}]);\n    setResult(null);\n  };\n\n  const removePeriod = (index) => {\n    setPeriods([...periods.filter((period, idx) => idx !== index)]);\n    setResult(null);\n  };\n\n  const calculate = () => {\n    const isValid = true;\n    const updatedPeriods = [];\n    let hasError = false;\n\n    periods.forEach((period) => {\n      const errorMessage = utils.validatePeriod(period);\n\n      if (errorMessage) hasError = true;\n\n      updatedPeriods.push({\n        ...period,\n        errorMessage: errorMessage,\n      })\n    });\n\n    setPeriods(updatedPeriods);\n\n    if (!hasError) {\n      setResult(utils.calculatePeriods(periods));\n    }\n  };\n\n  const updatePeriod = (periodIndex, data) => {\n    const updatedPeriods = [...periods];\n    updatedPeriods[periodIndex] = {\n      ...periods[periodIndex],\n      ...data,\n      errorMessage: '',\n    };\n\n    setPeriods([\n      ...updatedPeriods,\n    ]);\n\n    setResult(null);\n  };\n\n  const handleSalaryChange = (periodIndex, salary) => {\n    if (salary.length === 0) {\n      updatePeriod(periodIndex, {salary: ''});\n      return;\n    }\n\n    const salaryInInteger = parseInt(salary.replace(/[^0-9]/g, '') || 0);\n    const localeString = salaryInInteger.toLocaleString('en');\n    const formattedSalary = localeString.replace(/,/g, ' ');\n\n    const amountPaidForInsurance = utils.calculateAmountPaid(salaryInInteger);\n\n    updatePeriod(periodIndex, {salary: formattedSalary, amountPaidForInsurance});\n  };\n\n  return (\n    <div className=\"App\">\n      <table className=\"table table-bordered table-responsive-md\">\n        <thead>\n        <tr>\n          <th>#</th>\n          <th>Tá»«... </th>\n          <th>Äáº¿n... </th>\n          <th>\n            LÆ°Æ¡ng ÄÃ³ng BHXH\n            <button\n              className=\"btn btn-sm btn-link mx-1\"\n              onClick={() => setShowModalSalary(true)}\n              disabled={showModalSalary}\n            >\n\n            </button>\n          </th>\n          <th/>\n        </tr>\n        </thead>\n        <tbody>\n          {periods.map((period, index) => {\n            const {\n              salary,\n            } = period;\n\n            return (\n              <tr key={index}>\n                <td>{index + 1}</td>\n                <td>\n                  <select\n                    id=\"inputState\"\n                    className=\"mr-3\"\n                    onChange={(e) => updatePeriod(index, {monthStart: e.target.value})}\n                  >\n                    <option>ThÃ¡ng...</option>\n                    {months.map((label, index) => (<option value={index + 1} key={index}>{label}</option>))}\n                  </select>\n                  <select\n                    id=\"inputState\"\n                    className=\"\"\n                    onChange={(e) => updatePeriod(index, {yearStart: e.target.value})}\n                  >\n                    <option>NÄm...</option>\n                    {years.map((label) => (<option value={label} key={label}>{label}</option>))}\n                  </select>\n                </td>\n                <td>\n                  <select\n                    id=\"inputState\"\n                    className=\"mr-3\"\n                    onChange={(e) => updatePeriod(index, {monthEnd: e.target.value})}\n                  >\n                    <option>ThÃ¡ng...</option>\n                    {months.map((label, index) => (<option value={index + 1} key={index}>{label}</option>))}\n                  </select>\n                  <select\n                    id=\"inputState\"\n                    onChange={(e) => updatePeriod(index, {yearEnd: e.target.value})}\n                  >\n                    <option>NÄm...</option>\n                    {years.map((label) => (<option value={label} key={label}>{label}</option>))}\n                  </select>\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    placeholder=\"10 000 000\"\n                    id=\"exampleInputEmail1\"\n                    aria-describedby=\"emailHelp\"\n                    value={salary}\n                    onChange={(e) => handleSalaryChange(index, e.target.value)}\n                    style={{width: '120px'}}\n                  />\n                  {' '}\n                  vnÄ\n                </td>\n                <td>\n                  <button\n                    title=\"XÃ³a\"\n                    onClick={() => removePeriod(index)}\n                    className=\"btn btn-sm rounded btn-danger\"\n                  >\n                    xÃ³a\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div className=\"mb-4\">\n        <button\n          onClick={addPeriod}\n          className=\"btn btn-sm btn-secondary mr-2\"\n        >\n          <b>+</b> thÃªm dÃ²ng\n        </button>\n      </div>\n      <ul>\n        {periods.map((period, index) => {\n          const monthStart = parseInt(period.monthStart);\n          const monthEnd = parseInt(period.monthEnd);\n          const yearStart = parseInt(period.yearStart);\n          const yearEnd = parseInt(period.yearEnd);\n          const {errorMessage} = period;\n\n          let isValidTimeRange = true;\n          if (monthStart && monthEnd && yearStart && yearEnd) {\n            if (yearEnd < yearStart || (yearEnd === yearStart && monthEnd < monthStart)) {\n              isValidTimeRange = false;\n            }\n          }\n\n          if (isValidTimeRange && !errorMessage) {\n            return null;\n          }\n\n          return (\n            <li key={index}>\n              Lá»i á» dÃ²ng {index + 1}:\n              {' '}\n              {!isValidTimeRange && (\n                <span className=\"text-danger\">Thá»i gian khÃ´ng phÃ¹ há»£p, vui lÃ²ng chá»n láº¡i!</span>\n              )}\n              {' '}\n              {errorMessage && (\n                <span className=\"text-danger\">{errorMessage}</span>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n\n      <div className=\"mt-5 mb-5\">\n        <button\n          className=\"btn btn-lg btn-primary\"\n          onClick={calculate}\n          disabled={periods.length === 0}\n        >\n          Xem káº¿t quáº£\n        </button>\n      </div>\n      {result && (\n        <Result\n          result={result}\n        />\n      )}\n      <ModalSalary show={showModalSalary} setShow={setShowModalSalary}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}